/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parqueo;

import java.awt.BorderLayout;

import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author porto
 */
public class dashBoardParks extends javax.swing.JFrame {

    /**
     * Este JFrame es para poder reservar los espacios del parqueo y ver que
     * tipo de parqueo
     */
    
    private Image backgraound_image;
    
    public dashBoardParks() {
        initComponents();
        setbackgraoundPanel("src/Image/parqueoDash.jpg", jPanel1);
        setbackgraoundPanel("src/Image/parqueoDash.jpg", contentPark);
    }
//
//    public static boolean idVerificator(int id) {
//        
//        for (int i = 0; i < arrEmpleado.length; i++) {
//            if (arrEmpleado[i] != null && arrEmpleado[i].getId() == id) { // si el empleado seleccionado no es NULL y Es igual ID retorna el empleado seleccionado
//                return true;
//            }
//        }
//        return false;
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){

            @Override
            public void paintComponent(Graphics g) {
                //Obtener dimensiones
                int width = this.getSize().width;
                int height = this.getSize().height;

                if (backgraound_image != null){
                    g.drawImage(backgraound_image, 0, 0, width, height, null);
                }
                super.paintComponent(g);
            }

        };
        parkBttnS1 = new javax.swing.JButton();
        parkBttnS2 = new javax.swing.JButton();
        parkBttnS3 = new javax.swing.JButton();
        contentPark = new javax.swing.JPanel(){

            @Override
            public void paintComponent(Graphics g) {
                //Obtener dimensiones
                int width = this.getSize().width;
                int height = this.getSize().height;

                if (backgraound_image != null){
                    g.drawImage(backgraound_image, 0, 0, width, height, null);
                }
                super.paintComponent(g);
            }

        };
        historialBotton = new javax.swing.JButton();
        modifyBotton = new javax.swing.JButton();
        backBotton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setMaximumSize(new java.awt.Dimension(900, 800));
        setMinimumSize(new java.awt.Dimension(900, 800));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setMaximumSize(new java.awt.Dimension(900, 820));
        jPanel1.setMinimumSize(new java.awt.Dimension(900, 820));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 820));

        parkBttnS1.setBackground(new java.awt.Color(51, 51, 51));
        parkBttnS1.setText("Parqueo S1");
        parkBttnS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parkBttnS1ActionPerformed(evt);
            }
        });

        parkBttnS2.setBackground(new java.awt.Color(51, 51, 51));
        parkBttnS2.setText("Parqueo S2");
        parkBttnS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parkBttnS2ActionPerformed(evt);
            }
        });

        parkBttnS3.setBackground(new java.awt.Color(51, 51, 51));
        parkBttnS3.setText("Parqueo S3");
        parkBttnS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parkBttnS3ActionPerformed(evt);
            }
        });

        contentPark.setBackground(new java.awt.Color(102, 102, 102));
        contentPark.setPreferredSize(new java.awt.Dimension(860, 658));

        historialBotton.setBackground(new java.awt.Color(255, 255, 0));
        historialBotton.setForeground(new java.awt.Color(0, 0, 0));
        historialBotton.setText("Historial");
        historialBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historialBottonActionPerformed(evt);
            }
        });

        modifyBotton.setBackground(new java.awt.Color(0, 255, 255));
        modifyBotton.setForeground(new java.awt.Color(0, 0, 0));
        modifyBotton.setText("Modificar");
        modifyBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBottonActionPerformed(evt);
            }
        });

        backBotton.setBackground(new java.awt.Color(153, 0, 0));
        backBotton.setText("Atras");
        backBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBottonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentParkLayout = new javax.swing.GroupLayout(contentPark);
        contentPark.setLayout(contentParkLayout);
        contentParkLayout.setHorizontalGroup(
            contentParkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentParkLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(historialBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(backBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(modifyBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        contentParkLayout.setVerticalGroup(
            contentParkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentParkLayout.createSequentialGroup()
                .addContainerGap(541, Short.MAX_VALUE)
                .addGroup(contentParkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(historialBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifyBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(parkBttnS1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(parkBttnS2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(parkBttnS3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addComponent(contentPark, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parkBttnS1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parkBttnS2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parkBttnS3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentPark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Parqueo S3
    private void parkBttnS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parkBttnS3ActionPerformed
        ParkS3 parkS3 = new ParkS3();
        parkS3.setSize(900, 658);
        parkS3.setLocation(0, 0);
        
        contentPark.removeAll();
        contentPark.add(parkS3, BorderLayout.CENTER);
        contentPark.revalidate();
        contentPark.repaint();
    }//GEN-LAST:event_parkBttnS3ActionPerformed
    //Parqueo S1
    private void parkBttnS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parkBttnS1ActionPerformed
        ParkS1 parkS1 = new ParkS1();
        parkS1.setSize(900, 658);
        parkS1.setLocation(0, 0);
        
        contentPark.removeAll();
        contentPark.add(parkS1, BorderLayout.CENTER);
        contentPark.revalidate();
        contentPark.repaint();
    }//GEN-LAST:event_parkBttnS1ActionPerformed
    //Parqueo S2
    private void parkBttnS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parkBttnS2ActionPerformed
        ParkS2 parkS2 = new ParkS2();
        parkS2.setSize(900, 658);
        parkS2.setLocation(0, 0);
        
        contentPark.removeAll();
        contentPark.add(parkS2, BorderLayout.CENTER);
        contentPark.revalidate();
        contentPark.repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_parkBttnS2ActionPerformed

    private void backBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBottonActionPerformed
        // TODO add your handling code here:
        Menu menu = new Menu();
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBottonActionPerformed

    private void modifyBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBottonActionPerformed
        // TODO add your handling code here:
        modifyPark modify = new modifyPark();
        modify.setSize(824, 634);
        modify.setLocation(0, 0);

        modify.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_modifyBottonActionPerformed

    private void historialBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historialBottonActionPerformed
        Historial.showHistorial();
    }//GEN-LAST:event_historialBottonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashBoardParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashBoardParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashBoardParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashBoardParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
                /* Create and display the form */
         java.awt.EventQueue.invokeLater(new Runnable() {
             public void run() {
                 new dashBoardParks().setVisible(true);
             }
         });

    }
        public void setbackgraoundPanel(String rutaImage, JPanel panel) {
        panel.setOpaque(false);
        backgraound_image = new ImageIcon(rutaImage).getImage();
        panel.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBotton;
    private javax.swing.JPanel contentPark;
    private javax.swing.JButton historialBotton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton modifyBotton;
    private javax.swing.JButton parkBttnS1;
    private javax.swing.JButton parkBttnS2;
    private javax.swing.JButton parkBttnS3;
    // End of variables declaration//GEN-END:variables
}
